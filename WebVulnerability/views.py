from django.shortcuts import render, redirect
from django.http import HttpResponseRedirect
from django.contrib.auth import authenticate, login
from django.contrib.auth.hashers import make_password, check_password
from django.contrib import messages
from .models import User
from Users.models import UserRegistrationModel
from Users.forms import UserRegistrationForm

def index(request):
    # Logic for handling the index page
    return render(request, 'WebVulnerability/index.html')
def logout(request):
    # Logic for logging out the user
    # For example, clearing session data, etc.
    # Redirect to the index page
    return redirect('WebVulnerability:index')

def Base(request):
    # Logic for the base page
    # For example, fetching data to display on the base page
    # Render the Base.html template with the data
    return render(request, 'WebVulnerability/Base.html')


def UserLogin(request):
    if request.method == "POST":
        loginid = request.POST.get('loginname')
        pswd = request.POST.get('pswd')
        print("Login ID = ", loginid, ' Password = ', pswd)
        try:
            check = UserRegistrationModel.objects.get(loginid=loginid, password=pswd)
            status = check.status
            print('Status is = ', status)
            if status == "activated":
                request.session['id'] = check.id
                request.session['loggeduser'] = check.name
                request.session['loginid'] = loginid
                request.session['email'] = check.email
                print("User id At", check.id, status)
                return render(request, 'Users/UserHome.html', {})
            else:
                messages.success(request, 'Your Account Not at activated')
                return render(request, 'WebVulnerability/UserLogin.html')
        except Exception as e:
            print('Exception is ', str(e))
            pass
        messages.success(request, 'Invalid Login id and password')
    return render(request, 'WebVulnerability/UserLogin.html', {}) 

def AdminLogin(request):
    if request.method == 'POST':
        # Get the submitted form data
        username = request.POST.get('loginname')
        password = request.POST.get('password')
        
        # Authenticate the user
        user = authenticate(request, username=username, password=password)
        
        if user is not None and user.is_staff:
            # Log in the user
            login(request, user)
            
            # Redirect to the admin dashboard or any other desired page
            return redirect('Admin:AdminHome')
        
        error_message = 'Invalid login credentials'
        return render(request, 'WebVulnerability/AdminLogin.html', {'error_message': error_message})
    
    # Render the adminlogin.html template
    return render(request, 'WebVulnerability/AdminLogin.html')



def UsersRegister(request):
    form = UserRegistrationForm()  # Assuming you have created a form named UserRegistrationForm for UserRegistrationModel

    if request.method == 'POST':
        form = UserRegistrationForm(request.POST)
        if form.is_valid():
            print('Data is Valid')
            form.save()
            messages.success(request, 'You have been successfully registered')
            form = UserRegistrationForm()
            return render(request,'WebVulnerability/UserLogin',{'form': form})  

        else:
            messages.success(request, 'Email or Mobile Already Existed')
            print("Invalid form")
    else:
        form = UserRegistrationForm()
    return render(request, 'WebVulnerability/UsersRegister.html', {'form': form})
